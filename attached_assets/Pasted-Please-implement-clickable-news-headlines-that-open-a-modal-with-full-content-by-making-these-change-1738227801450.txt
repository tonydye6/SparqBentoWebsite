Please implement clickable news headlines that open a modal with full content by making these changes:
Add Modal State and Handlers
typescript
// Add to BentoGrid component
const [selectedNews, setSelectedNews] = useState(null);

const handleNewsClick = (headline: string, content: string) => {
  setSelectedNews({ headline, content });
  setExpandedCard("news");
};

const handleNewsClose = () => {
  setSelectedNews(null);
  setExpandedCard(null);
};
Update GameNews Component
typescript
// GameNews.tsx
export function GameNews({ expanded, onHeadlineClick }) {
  // Add click handler to headline elements
  return (
    <div className="news-carousel">
      {newsItems.map((item) => (
        <div 
          key={item.id}
          className="news-item cursor-pointer p-2 hover:bg-gray-800/50"
          onClick={() => onHeadlineClick(item.headline, item.content)}
        >
          <h3 className="text-lg font-semibold">{item.headline}</h3>
          <p className="text-sm text-gray-400 truncate">{item.summary}</p>
        </div>
      ))}
    </div>
  );
}
Modify BentoCardModal for News Content
typescript
// Update renderExpandedContent
case "news":
  return (
    <div className="news-modal-content">
      <h2 className="text-2xl font-bold mb-4">
        {selectedNews?.headline || "News Details"}
      </h2>
      <div className="prose max-w-none">
        {selectedNews?.content || "Loading article..."}
      </div>
    </div>
  );
Add News Item Fetching Logic
typescript
// Add to GameNews component
const [newsItems, setNewsItems] = useState([]);

useEffect(() => {
  const fetchNews = async () => {
    const response = await fetchPerplexityNews(); // Your API call
    setNewsItems(response.map(item => ({
      ...item,
      content: item.full_article // From Perplexity API response
    })));
  };
  fetchNews();
}, []);
Add Mobile/Desktop Responsive Click Handling
typescript
// Update the News card in BentoGrid
<motion.div className="relative perspective-1000" ...>
  <Card className="bento-card h-[315px] mb-6 cursor-pointer" 
    onClick={() => handleCardClick("news")}>
    <GameNews 
      expanded={expandedCard === "news"}
      onHeadlineClick={handleNewsClick}
    />
  </Card>
</motion.div>
Add CSS for News Items
css
.news-item {
  transition: all 0.2s ease;
  border-bottom: 1px solid rgba(255,255,255,0.1);
}

.news-item:last-child {
  border-bottom: none;
}

.news-modal-content {
  max-height: 80vh;
  overflow-y: auto;
  padding: 2rem;
}
This implementation will:
Make headlines clickable on both desktop and mobile
Show full content in modal while maintaining card dimensions
Keep existing layout and styling
Use Perplexity API content for modal details
Work with existing animation systems